# server_addr:
#   The hostname or address the client should connect to.
#   May be a hostname or IPv4/IPv6 address.
#
# Examples:
#   server=192.162.0.10
#   server=server.example.com
#
server_addr=localhost

# server_port:
#   The port number of the welcome port on the remote server that the
#   client should connect to.
#   Must be an integer between 0-65535.
#   If not specified, the default port is 9876.
#
# Example:
#   server=3000
#
server_port=9876

# client_addr:
#  The IP address the client should listen on for the chat session connection.
#
#  See comments in external_client_addr below.
#
#  May be a hostname or IPv4/IPv6 address.
#  Must be a resolve to a single interface (not 0.0.0.0 or ::)
#
#  Default value if omitted: 127.0.0.1
#
# Examples:
#   client_addr=192.162.0.10
#   client_addr=mycomputer.local
client_addr=127.0.0.1

# client_external_addr:
#  The external IP address the client will send in REGISTER requests to the
#  server. This address must be routable from the server.
#
#  The chat session protocol specifies that the client should solicits a new,
#  inbound connection from the server to the client via the REGISTER message.
#  This is similar to the scheme used in non-PASV FTP and suffers from the same
#  out-of-band solicitation problems. Because the server initiates the TCP
#  session instead of the client, the connection is unsolicited from the
#  perspective of the client's firewall or NAT router.
#
#  So:
#
#  If you have a direct connection to the internet and/or the server's network,
#  this will be the same as client_addr. However, if you are behind a NAT
#  router, you will need to set this to the external (WAN) IP of the router and
#  set up port-forwarding accordingly to map external_addr:client_port to
#  local_addr:client_port. Additionally, if you are behind a firewall or
#  running firewall on the client host, you will need to permit this port in
#  the firewall's connection.
#
#  TL;DR: the chat protocol is poorly designed for modern Internet practices,
#  but the requirements document is out of our hands. This is a workaround.
#
#  May be a hostname or IPv4/IPv6 address.
#  Must be a resolve to a single interface (not 0.0.0.0 or ::)
#
#  Default value if omitted: 127.0.0.1
#
# Examples:
#   client_addr=192.162.0.10
#   client_addr=myhost.example.com
#
client_external_addr=127.0.0.1

# client_port:
#  The port number the client should listen on for the chat session connection.
#
#  If you are behind any firewalls, you must open this port on all of them.
#  (see commentary in external_client_address)
#
#  Note: the local UDP port used by the client when handshaking is ephemeral
#  and not affected by this setting.
#
#  Must be an integer between 0-65535.
#  If not specified, the default port is 9877.
#
client_port=9885

# client_id:
#   The client ID that the client should attempt to log in as on the
#   remote server.
#   Must be a non-negative integer.
#
# Example:
#   client_id = 3
#
client_id=9

# private_key:
#   The private key is used to authenticate the client and generate
#   encryption keys.
#   May be any non-empty string.
#
# Examples:
#   private_key=MySecretPassword
#   private_key=12345678
#
private_key=nine

# debug:
#	Should the program print out debug messages?
#
#	Must be 'true' or 'false'. Capitalization does not matter.
#
#	If ommited, the default is false (no debug messages)
#
# Example:
#	debug = true
debug = true

# timeout_interval:
#   The maximum time the client should wait for server responses, in
#   milliseconds.
#
#   Must be a non-negative integer.
#
#   A value of 0 indicates that the client should wait forever (not
#   recommended).
#
#   If omitted, the default value is 3000 milliseconds.
#
timeout_interval=3000
